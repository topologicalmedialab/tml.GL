varying vec2 texcoord0;
uniform sampler2DRect tex0;
uniform	float user_alpha;
varying vec2 texcoord1;
uniform sampler2DRect tex1;
uniform	float user_fade;
void main() {
vec4 v1 = texture2DRect(tex1, texcoord1 + vec2(0.0,0.0));
vec4 v2 = texture2DRect(tex1, texcoord1 + vec2(-1.0,0.0));
vec4 v3 = texture2DRect(tex1, texcoord1 + vec2(1.0,0.0));
float v4 = v2.x + v3.x;
vec4 v5 = texture2DRect(tex1, texcoord1 + vec2(0.0,-1.0));
float v6 = v4 + v5.x;
vec4 v7 = texture2DRect(tex1, texcoord1 + vec2(0.0,1.0));
float v8 = v6 + v7.x;
float v9 = user_alpha * v8;
float v10 = v1.x + v9;
float v11 = user_fade * v10;
float v12 = 4.0 * user_alpha;
float v13 = 1.0 + v12;
float v14 = v11 / v13;
vec4 v15 = texture2DRect(tex0, texcoord0 + vec2(0.0,0.0));
float v16 = v14 + v15.x;
if (v16 != v16)	v16 = 0.0;
gl_FragColor.x = v16;
float v17 = v2.y + v3.y;
float v18 = v17 + v5.y;
float v19 = v18 + v7.y;
float v20 = user_alpha * v19;
float v21 = v1.y + v20;
float v22 = user_fade * v21;
float v23 = 4.0 * user_alpha;
float v24 = 1.0 + v23;
float v25 = v22 / v24;
float v26 = v25 + v15.y;
if (v26 != v26)	v26 = 0.0;
gl_FragColor.y = v26;
float v27 = v2.z + v3.z;
float v28 = v27 + v5.z;
float v29 = v28 + v7.z;
float v30 = user_alpha * v29;
float v31 = v1.z + v30;
float v32 = user_fade * v31;
float v33 = 4.0 * user_alpha;
float v34 = 1.0 + v33;
float v35 = v32 / v34;
float v36 = v35 + v15.z;
if (v36 != v36)	v36 = 0.0;
gl_FragColor.z = v36;
float v37 = v2.w + v3.w;
float v38 = v37 + v5.w;
float v39 = v38 + v7.w;
float v40 = user_alpha * v39;
float v41 = v1.w + v40;
float v42 = user_fade * v41;
float v43 = 4.0 * user_alpha;
float v44 = 1.0 + v43;
float v45 = v42 / v44;
float v46 = v45 + v15.w;
if (v46 != v46)	v46 = 0.0;
gl_FragColor.w = v46;
} 